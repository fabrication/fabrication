/** * Copyright (C) 2010 Rafa≈Ç Szemraj. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.puremvc.as3.multicore.utilities.fabrication.logging.channel {    import org.puremvc.as3.multicore.utilities.fabrication.logging.LogLevel;    /**     * Interface of log channel used in logging api     */    public interface ILogChannel {        /**         * Logs given message at given log level, loggingObject is threaten as source of message         * @param message message to log         * @param logLevel level at which message will be logged         * @param loggingObject source of message <strong>[ optional ]</strong>         */        function log(message:*, logLevel:LogLevel, loggingObject:String):void;        /**         * Inspects object ( eg. shows its structure in tree, datagrid etc ). How this method works         * depends on log channel inspectObject method implementation. <b>Important</b> - remember, it shows only dynamic         * properties of object. To show whole information use as3 flash.utils.describeType.         * @param object object to inspect         * @param objectName name of object. You can pass any string that distinguish current object from others,         * if omit "object" is set. <strong>[ optional ]</strong>         * @see Logger         */        function inspectObject(object:*, objectName:String = "object"):void;        /**         * Clears channel's output.         */        function clearOutput():void;    }}