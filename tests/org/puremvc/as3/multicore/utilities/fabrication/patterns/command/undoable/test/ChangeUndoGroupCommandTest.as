/** * Copyright (C) 2009 Darshan Sawardekar. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.puremvc.as3.multicore.utilities.fabrication.patterns.command.undoable.test {    import org.puremvc.as3.multicore.interfaces.ICommand;    import org.puremvc.as3.multicore.interfaces.INotification;    import org.puremvc.as3.multicore.patterns.observer.Notification;    import org.puremvc.as3.multicore.utilities.fabrication.core.mock.FabricationControllerMock;    import org.puremvc.as3.multicore.utilities.fabrication.patterns.command.SimpleFabricationCommand;    import org.puremvc.as3.multicore.utilities.fabrication.patterns.command.test.AbstractFabricationCommandTest;    import org.puremvc.as3.multicore.utilities.fabrication.patterns.command.undoable.*;    /**	 * @author Darshan Sawardekar	 */	public class ChangeUndoGroupCommandTest extends AbstractFabricationCommandTest {				public var controller:FabricationControllerMock;        [Test]		public function testChangeUndoGroupCommandHasValidType():void {			assertType(ChangeUndoGroupCommand, command);			assertType(SimpleFabricationCommand, command);		}        [Test]		public function testChangeUndoGroupCommand():void {			facade.mock.property("fabricationController").returns(controller).once;			controller.mock.property("groupID").withArgs(notification.getBody()).once;			executeCommand();			verifyMock(facade.mock);			verifyMock(controller.mock);		}		override public function createCommand():ICommand {			return new ChangeUndoGroupCommand();		}				override public function initializeFabrication():void {			controller = FabricationControllerMock.getInstance(multitonKey);			super.initializeFabrication();		}				override public function createNotification():INotification {			return new Notification(null, instanceName + "UndoGroup");		}	}}